<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.garethahealy</groupId>
        <artifactId>jboss-fuse-examples</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>
    <artifactId>examples-parent</artifactId>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>

    <properties>
        <!-- Build propertis based on the Apache Camel project -->
        <build.osgi.import.build.version>
            version="[$(version;==;${build.osgi.version.clean}),$(version;=+;${build.osgi.version.clean}))"
        </build.osgi.import.build.version>
        <build.osgi.import.strict.version>
            version="[$(version;===;${build.osgi.version.clean}),$(version;==+;${build.osgi.version.clean}))"
        </build.osgi.import.strict.version>
        <build.osgi.import.default.version>[$(version;==;$(@)),$(version;+;$(@)))</build.osgi.import.default.version>
        <build.osgi.import.defaults/>
        <build.osgi.import.before.defaults/>
        <build.osgi.import.additional/>
        <build.osgi.import.pkg>
            !${build.osgi.export.pkg},
            com.garethahealy.*;${build.osgi.import.build.version},
            ${build.osgi.import.before.defaults},
            ${build.osgi.import.defaults},
            ${build.osgi.import.additional},
            *
        </build.osgi.import.pkg>
        <build.osgi.export.pkg/>
        <build.osgi.activator/>
        <build.osgi.failok>false</build.osgi.failok>
        <build.osgi.private.pkg>!*</build.osgi.private.pkg>
        <build.osgi.export>${build.osgi.export.pkg};${build.osgi.version}</build.osgi.export>
        <build.osgi.meta.persistence/>
        <build.osgi.version>version=${project.version}</build.osgi.version>
        <build.osgi.split.pkg>-split-package:=first</build.osgi.split.pkg>
        <build.osgi.import>${build.osgi.import.pkg}</build.osgi.import>
        <build.osgi.dynamic/>
        <build.osgi.symbolic.name>${project.groupId}.${project.artifactId}</build.osgi.symbolic.name>
        <build.osgi.exclude.dependencies>false</build.osgi.exclude.dependencies>
    </properties>

    <dependencies>
        <!-- Core OSGi -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
        </dependency>

        <!-- Core Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-blueprint</artifactId>
        </dependency>

        <!-- Camel AMQ -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
        </dependency>

        <!-- Testing: Used to resolve blueprint namespaces -->
        <dependency>
            <groupId>org.apache.aries.blueprint</groupId>
            <artifactId>org.apache.aries.blueprint</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testing: Camel JUnit -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-blueprint</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java-runtime}</source>
                    <target>${java-runtime}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
                            <Bundle-Version>${build.osgi.version.clean}</Bundle-Version>
                            <Eclipse-SourceBundle>
                                ${project.groupId}.${project.artifactId};version="${build.osgi.version.clean}"
                            </Eclipse-SourceBundle>
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-javaagent:${ekstazi-m2-path}.jar=mode=junit</argLine>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.ekstazi</groupId>
                        <artifactId>org.ekstazi.core</artifactId>
                        <version>${ekstazi-core-version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <inherited>true</inherited>
                <configuration>
                    <excludeDependencies>${build.osgi.exclude.dependencies}</excludeDependencies>
                    <instructions>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Bundle-SymbolicName>${build.osgi.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${build.osgi.activator}</Bundle-Activator>
                        <Export-Package>${build.osgi.export}</Export-Package>
                        <Import-Package>${build.osgi.import}</Import-Package>
                        <Private-Package>${build.osgi.private.pkg}</Private-Package>
                        <Import-Service>${build.osgi.import.service}</Import-Service>
                        <Export-Service>${build.osgi.export.service}</Export-Service>
                        <Meta-Persistence>${build.osgi.meta.persistence}</Meta-Persistence>
                        <Implementation-Title>${build.osgi.implementation.title}</Implementation-Title>
                        <Implementation-Version>${project.version}</Implementation-Version>
                        <Karaf-Info>${build.osgi.symbolic.name}=${build.osgi.version.clean}</Karaf-Info>
                        <_versionpolicy>${build.osgi.import.default.version}</_versionpolicy>
                        <_failok>${build.osgi.failok}</_failok>
                        <Embed-Dependency>${build.osgi.embed}</Embed-Dependency>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>versions</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>cleanVersions</goal>
                        </goals>
                        <configuration>
                            <versions>
                                <build.osgi.version.clean>${project.version}</build.osgi.version.clean>
                            </versions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <onlyAnalyze>com.garethahealy.*</onlyAnalyze>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <xmlOutput>true</xmlOutput>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>../building-tools/camel-checkstyle.xml</configLocation>
                            <consoleOutput>true</consoleOutput>
                            <failOnViolation>false</failOnViolation>
                            <failsOnError>false</failsOnError>
                            <suppressionsLocation>../building-tools/camel-checkstyle-suppressions.xml</suppressionsLocation>
                            <encoding>UTF-8</encoding>
                            <sourceDirectory>${basedir}/src</sourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
